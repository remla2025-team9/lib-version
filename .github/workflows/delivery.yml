name: Delivery

# Trigger workflow on pushes to main branch
on:
  push:
    branches:
      - main

# Allow workflow to create and push tags
permissions:
  contents: write

env:
  GIT_USER_NAME: "github-actions[bot]"
  GIT_USER_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  bump-prerelease:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository with full history
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0


      # Sets up Git identity for automated commits
      - name: Configure Git
        run: |
          git config user.name "${{ env.GIT_USER_NAME }}"
          git config user.email "${{ env.GIT_USER_EMAIL }}"
          git remote set-url origin git@github.com:${{ github.repository }}.git

      # Sets up SSH for pushing changes to the repository to bypass branch protection rules
      - name: Setup SSH for pushing
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY_PRIVATE }}

      # Ensure we have all tags for version determination
      - run: git fetch --tags

      # Calculate next pre-release version number
      - id: compute
        run: |
          LATEST=$(git tag --list 'v*-pre-*' --sort=-v:refname | head -n1)
          if [ -z "$LATEST" ]; then
            BASE=$(git tag --list 'v*.*.*' --sort=-v:refname | head -n1 | sed 's/^v//')
            if [ -z "$BASE" ]; then
              BASE="0.0.1"
            fi
            NUM=0
          else
            BASE=${LATEST#v}
            BASE=${BASE%-pre-*}
            NUM=${LATEST##*-pre-}
            NUM=$((NUM+1))
          fi
          NEXT="$BASE-pre-$NUM"
          echo "next=$NEXT" >> $GITHUB_OUTPUT

      # Update version file with new pre-release version
      - run: |
          sed -E 's/^__version__ = ".*"/__version__ = "'"${{ steps.compute.outputs.next }}"'"/' \
            lib_version/version.py > tmp && mv tmp lib_version/version.py

      # Commit version changes to repository
      - run: |
          git add lib_version/version.py
          git commit -m "Version bumped to ${{ steps.compute.outputs.next }} [skip ci]"

      # Create tag and push changes to GitHub
      - run: |
          git tag "v${{ steps.compute.outputs.next }}"
          git push origin main --tags