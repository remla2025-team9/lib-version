name: Release

on:
  workflow_dispatch:
    inputs:
      bump_level:
        description: 'Choose version bump: major, minor, or patch'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Fetch tags
        run: git fetch --tags

      - name: Determine new stable version
        id: bump
        run: |
          LATEST_TAG=$(git tag --list 'v*.*.*' --sort=-v:refname | head -n1)
          BASE=${LATEST_TAG#v}
          IFS='.' read MAJOR MINOR PATCH <<< "$BASE"
          case "${{ inputs.bump_level }}" in
            major) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0;;
            minor) MINOR=$((MINOR+1)); PATCH=0;;
            patch) PATCH=$((PATCH+1));;
          esac
          NEW_STABLE="$MAJOR.$MINOR.$PATCH"
          echo "stable=$NEW_STABLE" >> $GITHUB_OUTPUT

      - name: Update version.py to stable
        run: |
          sed -E 's/^__version__ = ".*"/__version__ = "'"${{ steps.bump.outputs.stable }}"'"/' \
            lib_version/version.py > tmp && mv tmp lib_version/version.py

      - name: Commit & push stable
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add lib_version/version.py
          git commit -m "Release v${{ steps.bump.outputs.stable }}"
          git tag "v${{ steps.bump.outputs.stable }}"
          git push origin main --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.stable }}
          release_name: v${{ steps.bump.outputs.stable }}

      - name: Determine next prerelease
        id: pre
        run: |
          IFS='.' read MAJOR MINOR PATCH <<< "${{ steps.bump.outputs.stable }}"
          NEXT="$MAJOR.$MINOR.$((PATCH+1))-pre1"
          echo "next=$NEXT" >> $GITHUB_OUTPUT

      - name: Update version.py to prerelease
        run: |
          sed -E 's/^__version__ = ".*"/__version__ = "'"${{ steps.pre.outputs.next }}"'"/' \
            lib_version/version.py > tmp && mv tmp lib_version/version.py

      - name: Commit & tag prerelease
        run: |
          git add lib_version/version.py
          git commit -m "Bump to prerelease v${{ steps.pre.outputs.next }}"
          git tag "v${{ steps.pre.outputs.next }}"
          git push origin main --tags
